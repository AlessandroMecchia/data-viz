import pandas as pd
# List of countries with their ISO codes
# List of countries with their ISO codes
countries = [
    ('Albania', 'al'), 
    ('Algeria', 'dz'), 
    ('Andorra', 'ad'), 
    ('Angola', 'ao'), 
    ('Anguilla', 'ai'), 
    ('Antigua and Barbuda', 'ag'), 
    ('Argentina', 'ar'), 
    ('Armenia', 'am'), 
    ('Aruba', 'aw'), 
    ('Australia', 'au'), 
    ('Austria', 'at'), 
    ('Azerbaijan', 'az'), 
    ('Bahamas', 'bs'), 
    ('Bahrain', 'bh'), 
    ('Bangladesh', 'bd'), 
    ('Barbados', 'bb'), 
    ('Belarus', 'by'), 
    ('Belgium', 'be'), 
    ('Belgium-Luxembourg', 'be'),  # Treated as Belgium
    ('Belize', 'bz'), 
    ('Benin', 'bj'), 
    ('Bermuda', 'bm'), 
    ('Bhutan', 'bt'), 
    ('Bolivia (Plurinational State of)', 'bo'), 
    ('Bosnia and Herzegovina', 'ba'), 
    ('Botswana', 'bw'), 
    ('Brazil', 'br'), 
    ('British Virgin Islands', 'vg'), 
    ('Brunei Darussalam', 'bn'), 
    ('Bulgaria', 'bg'), 
    ('Burkina Faso', 'bf'), 
    ('Burundi', 'bi'), 
    ('Cabo Verde', 'cv'), 
    ('Cambodia', 'kh'), 
    ('Cameroon', 'cm'), 
    ('Canada', 'ca'), 
    ('Cayman Islands', 'ky'), 
    ('Central African Republic', 'cf'), 
    ('Chad', 'td'), 
    ('Chile', 'cl'), 
    ('China', 'cn'), 
    ('China, Hong Kong SAR', 'hk'), 
    ('China, Macao SAR', 'mo'), 
    ('China, Taiwan Province of', 'tw'), 
    ('China, mainland', 'cn'), 
    ('Colombia', 'co'), 
    ('Comoros', 'km'), 
    ('Congo', 'cg'), 
    ('Cook Islands', 'ck'), 
    ('Costa Rica', 'cr'), 
    ('Croatia', 'hr'), 
    ('Cuba', 'cu'), 
    ('Cyprus', 'cy'), 
    ('Czechia', 'cz'), 
    ('Czechoslovakia', 'cs'),  # Historical
    ("Côte d'Ivoire", 'ci'), 
    ('Democratic People\'s Republic of Korea', 'kp'), 
    ('Democratic Republic of the Congo', 'cd'), 
    ('Denmark', 'dk'), 
    ('Djibouti', 'dj'), 
    ('Dominican Republic', 'do'), 
    ('Ecuador', 'ec'), 
    ('Egypt', 'eg'), 
    ('El Salvador', 'sv'), 
    ('Equatorial Guinea', 'gq'), 
    ('Eritrea', 'er'), 
    ('Estonia', 'ee'), 
    ('Eswatini', 'sz'), 
    ('Ethiopia', 'et'), 
    ('Ethiopia PDR', 'et'),  # Treated as Ethiopia
    ('Falkland Islands (Malvinas)', 'fk'), 
    ('Faroe Islands', 'fo'), 
    ('Fiji', 'fj'), 
    ('Finland', 'fi'), 
    ('France', 'fr'), 
    ('French Polynesia', 'pf'), 
    ('Gabon', 'ga'), 
    ('Gambia', 'gm'), 
    ('Georgia', 'ge'), 
    ('Germany', 'de'), 
    ('Ghana', 'gh'), 
    ('Greece', 'gr'), 
    ('Greenland', 'gl'), 
    ('Grenada', 'gd'), 
    ('Guam', 'gu'), 
    ('Guatemala', 'gt'), 
    ('Guinea', 'gn'), 
    ('Guinea-Bissau', 'gw'), 
    ('Haiti', 'ht'), 
    ('Holy See', 'va'), 
    ('Honduras', 'hn'), 
    ('Hungary', 'hu'), 
    ('Iceland', 'is'), 
    ('India', 'in'), 
    ('Indonesia', 'id'), 
    ('Iran (Islamic Republic of)', 'ir'), 
    ('Iraq', 'iq'), 
    ('Ireland', 'ie'), 
    ('Israel', 'il'), 
    ('Italy', 'it'), 
    ('Jamaica', 'jm'), 
    ('Japan', 'jp'), 
    ('Jordan', 'jo'), 
    ('Kazakhstan', 'kz'), 
    ('Kenya', 'ke'), 
    ('Kiribati', 'ki'), 
    ('Kuwait', 'kw'), 
    ('Kyrgyzstan', 'kg'), 
    ('Lao People\'s Democratic Republic', 'la'), 
    ('Latvia', 'lv'), 
    ('Lebanon', 'lb'), 
    ('Lesotho', 'ls'), 
    ('Liberia', 'lr'), 
    ('Libya', 'ly'), 
    ('Lithuania', 'lt'), 
    ('Luxembourg', 'lu'), 
    ('Madagascar', 'mg'), 
    ('Malawi', 'mw'), 
    ('Malaysia', 'my'), 
    ('Maldives', 'mv'), 
    ('Mali', 'ml'), 
    ('Malta', 'mt'), 
    ('Mauritania', 'mr'), 
    ('Mauritius', 'mu'), 
    ('Mayotte', 'yt'), 
    ('Mexico', 'mx'), 
    ('Micronesia (Federated States of)', 'fm'), 
    ('Mongolia', 'mn'), 
    ('Montenegro', 'me'), 
    ('Montserrat', 'ms'), 
    ('Morocco', 'ma'), 
    ('Mozambique', 'mz'), 
    ('Myanmar', 'mm'), 
    ('Namibia', 'na'), 
    ('Nauru', 'nr'), 
    ('Nepal', 'np'), 
    ('Netherlands (Kingdom of the)', 'nl'), 
    ('Netherlands Antilles (former)', 'an'), 
    ('New Caledonia', 'nc'), 
    ('New Zealand', 'nz'), 
    ('Nicaragua', 'ni'), 
    ('Niger', 'ne'), 
    ('Nigeria', 'ng'), 
    ('Niue', 'nu'), 
    ('Norfolk Island', 'nf'), 
    ('North Macedonia', 'mk'), 
    ('Northern Mariana Islands', 'mp'), 
    ('Norway', 'no'), 
    ('Oman', 'om'), 
    ('Pacific Islands Trust Territory', 'pt'), 
    ('Pakistan', 'pk'), 
    ('Palau', 'pw'), 
    ('Palestine', 'ps'), 
    ('Panama', 'pa'), 
    ('Papua New Guinea', 'pg'), 
    ('Paraguay', 'py'), 
    ('Peru', 'pe'), 
    ('Philippines', 'ph'), 
    ('Pitcairn', 'pn'), 
    ('Poland', 'pl'), 
    ('Portugal', 'pt'), 
    ('Qatar', 'qa'), 
    ('Republic of Korea', 'kr'), 
    ('Republic of Moldova', 'md'), 
    ('Romania', 'ro'), 
    ('Russian Federation', 'ru'), 
    ('Rwanda', 'rw'), 
    ('Saint Helena, Ascension and Tristan da Cunha', 'sh'), 
    ('Saint Kitts and Nevis', 'kn'), 
    ('Saint Lucia', 'lc'), 
    ('Saint Vincent and the Grenadines', 'vc'), 
    ('Samoa', 'ws'), 
    ('Sao Tome and Principe', 'st'), 
    ('Saudi Arabia', 'sa'), 
    ('Senegal', 'sn'), 
    ('Serbia', 'rs'), 
    ('Serbia and Montenegro', 'cs'),  # Historical
    ('Seychelles', 'sc'), 
    ('Sierra Leone', 'sl'), 
    ('Sint Maarten (Dutch part)', 'sx'), 
    ('Slovakia', 'sk'), 
    ('Slovenia', 'si'), 
    ('Solomon Islands', 'sb'), 
    ('Somalia', 'so'), 
    ('South Africa', 'za'), 
    ('Spain', 'es'), 
    ('Sri Lanka', 'lk'), 
    ('Sudan', 'sd'), 
    ('Sudan (former)', 'sd'),  # Historical
    ('Suriname', 'sr'), 
    ('Sweden', 'se'), 
    ('Switzerland', 'ch'), 
    ('Syrian Arab Republic', 'sy'), 
    ('Tajikistan', 'tj'), 
    ('Thailand', 'th'), 
    ('Timor-Leste', 'tl'), 
    ('Togo', 'tg'), 
    ('Tokelau', 'tk'), 
    ('Tonga', 'to'), 
    ('Trinidad and Tobago', 'tt'), 
    ('Tunisia', 'tn'), 
    ('Turkmenistan', 'tm'), 
    ('Turks and Caicos Islands', 'tc'), 
    ('Tuvalu', 'tv'), 
    ('Türkiye', 'tr'), 
    ('USSR', 'ru'),  # Historical
    ('Uganda', 'ug'), 
    ('Ukraine', 'ua'), 
    ('United Kingdom of Great Britain and Northern Ireland', 'gb'), 
    ('United Republic of Tanzania', 'tz'), 
    ('United States of America', 'us'), 
    ('Uruguay', 'uy'), 
    ('Vanuatu', 'vu'), 
    ('Venezuela (Bolivarian Republic of)', 've'), 
    ('Viet Nam', 'vn'), 
    ('Wallis and Futuna Islands', 'wf'), 
    ('Yemen', 'ye'), 
    ('Yugoslav SFR', 'yu')  # Historical


import pandas as pd

# Read the original CSV file
input_file = "/home/fjg/raspnas/universitá/data_visualization/final_group_project/cleaned_dataset.csv"  # Input file path
output_file = 'modified_tableau_wide_format_countries_with_flags.csv'  # Desired output file path

# Load the dataset
df = pd.read_csv(input_file)

# Melt the DataFrame to reshape it first
df_melted = df.melt(id_vars=['Area', 'Year'],  # Include 'Area' for countries
                    value_vars=['Fungicides and Bactericides', 'Herbicides', 'Insecticides', 
                                'Other Pesticides nes', 'Pesticides (total)', 
                                'Plant Growth Regulators', 'Rodenticides'],
                    var_name='Pesticide Type', 
                    value_name='Usage')

# Filter out the 'Pesticides (total)' row
df_melted = df_melted[df_melted['Pesticide Type'] != 'Pesticides (total)']

# Merge 'China' and 'Mainland'
df_melted['Area'] = df_melted['Area'].replace({'China, mainland': 'China', 'Mainland': 'China'})

# Pivot the melted DataFrame to get countries as rows and years as columns
df_pivot = df_melted.pivot_table(index='Area',  # Set countries as rows
                                   columns='Year', 
                                   values='Usage', 
                                   aggfunc='sum').reset_index()

# Generate flag URLs using a for loop
flag_mapping = {}
for country, code in countries:
    flag_mapping[country] = f'https://public.flourish.studio/country-flags/svg/{code}.svg'

# Map the flag URLs to the DataFrame based on the country names
df_pivot['Flag URL'] = df_pivot['Area'].map(flag_mapping)

# Save the modified dataset to a new CSV file
df_pivot.to_csv(output_file, index=False)

print(f"Wide-format dataset with countries and flag URLs saved to {output_file}")
